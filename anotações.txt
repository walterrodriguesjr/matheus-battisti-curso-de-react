https://www.youtube.com/watch?v=FXqX7oof0I4&list=PLnDvRpP8BneyVA0SZ2okm-QBojomniQVO

1-Introdução - #01
-apresentação da proposta do curso.
-instalar o node JS (já instalado)
-é uma biblioteca JS para criação de interface 
-usada para aplicações SPA 
-baseado em componentes 
-usa JSX para renderizar HTML 

2-Instalando o React (create-react-app)
-o nome da ferramenta de instalação é: Create React App 
-necessário também o node e o npm instalados
-npx create-react-app meu-projeto
-npm start 
-http://172.28.224.1:3000

3-Entendendo o JSX
-o JSX é como um HTML, porém dentro do código JavaScript(como uma template engine)
-é a principal maneira de escrever HTML com o React
-é possível também executar funções em JSX 
-variáveis de JavaScript, podem ser chamadas no HTML inserindo a variável entre chaves{} 
-em react 'class' é uma palavra reservada, usa-se o 'className'

4-Criando componentes no React
-criar componentes, permite dividir a aplicação em aprtes 
-os componentes renderizam JSX, assim como App.js (que é um componente)
-é possivel compartilhar os componentes entre si, importando ou exportando 
-geralmente ficam em pasta chamada components, dentro de src 

5-Trabalhando com props
-as props(propriedades), são valores passados para componentes 
-possibilita o uso dinâmico, ou seja, mudando a execução por causa do valor da prop 
-o valor é passado como um atributo na chamada do componente, e precisa ser resgatado dentro de uma 
    propriedade/argumento chamada props na função de definição do componente 
-as props são somente de leitura 
-os propos são os parametros das funções dos componentes, para serem definidas dinamicamente onde o 
    componente for importado para uso 

6-Inserindo CSS no React (CSS modules)
-o CSS pode ser adicionado de forma global na aplicação, por meio do arquivo index.css, por exemplo 
-porém, é possível estilizar a nível de componente também, neste caso, não global a todos 
-utilizamos o CSS modules para isso 
-basta criar um arquivo como: Componente.module.css, e chamar este CSS no componente 

7-Utilizando React fragments
-os react fragments permitem a criação de um componente sem elemento pai 
-é quando o conteúdo não é envolvido por uma <div>, e sim, por tags vazias: <></>

8-Avançando em props
-é possível definir tipos para os props(string, number etc..), realizando uma espécie de validação 
-é definido em um objeto chamado propTypes no próprio componente 
-exeste também a possibilidade de definir um valor padrão, usando o objeto defaultProps 
-quando for tipificar o componente com props, deve se importar nele o propTypes
    import PropTypes from "prop-types";

9-Eventos no React (onClick, onChange e onSubmit)
-são os mesmo eventode DOM 
-é atrelado a uma tag que irá executa-la 
-geralmente um método é atribuído ao evento, criado no componente
-execução:
    no componente de Evento, define-se a função e o que ela vai fazer ao clicar
    no return do componente, define no HTML como vai ser, ta tag <button> insere o onClick e o nome do método 
-no componente FORM a lógica é semelhante 

10-useState na prática 
-useState é um hook do react 
-ele possibilita manusear o estado de um componente
-este funciona muito bem com eventos 
-possibilita atrelar um evento a mundança de  state 
-useState é usado, quando trabalhamos com formulários, para pegar o valor de inputs 
-no componente que for usar o useState, deve se primeiramente, importa-lo da própria biblioteca do react 
    import { useState } from "react"; 

11-Passar eventos por props
-um componente flho pode ativar o método do seu ancestral 

12-Renderização condicional (if)
-a condicional pode ser inserida (renderizada) dentro do HTML entre {} renderizando algo, por exemplo,
     caso a condição seja atendida 

13-enderização de listas
-para renderizar uma lista, precisa-se de um array 
-posteriormente, usa a função map() para percorrer cada um dos itens 
- em App.js, é chamado o componente que foi importado OutraLista, e em seguida o prop dele que 
    é itens, este chama uma função de map, que recebe como parâmetro o array criado 

14-State Lift
-State Lift é uma técnica usada para compartilhar o state 
-é normal vários componentes dependerem do mesmo estado 
-neste caso, eleva-se o nível do mesmo a um componente pai 
-centraliza o state no pai, é definimos quem usa e quem define (setState);

15-implementando o React Router 
-é um pacote para mudança de URLs da aplicação 
-permite acessar outras views, sem dar refresh na página, trocando apenas uma parte do layout da aplicação 
-necessário instalar o pacote no projeto, alterando também, como o APP é estruturado 
-npm install react-router-dom
-alteração pq na nova versão do react, o Switch que vem com Router, não se usa mais, usando o Routes no lugar do Switch 

16-React Icons
-é um pacote de icones externo do react, dentro do site, https://react-icons.github.io/react-icons/ 
    pode se escolher a bibliote que será instalada, Game icons, Font Awesome etc 
-precisa ser adicionado via npm 
    npm install react-icons --save
-no mesmo site, após instalar, o link de uso das diversas bibliotecas é o mesmo, mudando apenas o final depois 
    da barra, como no exemplo abaixo, que irá usar o font awesome 
    import { IconName } from "react-icons/fa";
-cada icone, precisa ser importado no componente que será usado, podendo ser chamado depois no HTML 


FIM PARTE TEÓRICA


